{"version":3,"sources":["DadJokes.js","Station.js","Bikes.js","App.js","reportWebVitals.js","index.js"],"names":["DadJokes","useState","joke","setJoke","useEffect","fetch","then","response","json","result","data","children","catch","error","console","log","title","className","selftext","Station","station","bikesAvailable","spacesAvailable","service","createEnturService","clientName","Bikes","bikeStations","setBikeStations","getBikeRentalStationsByPosition","latitude","longitude","length","map","bikeStation","name","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAEe,SAASA,IAAY,IAAD,EACTC,oBAAS,GADA,mBAC1BC,EAD0B,KACpBC,EADoB,KAUjC,OAPAC,qBAAU,WACRC,MAAM,4DACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAYN,EAAQM,EAAOC,KAAKC,SAAS,GAAGD,SACjDE,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,IAEIX,EAAKc,MACV,sBAAKC,UAAU,OAAf,UACE,qDACA,6BAAKf,EAAKc,QACV,4BAAId,EAAKgB,cAGX,sBAAKD,UAAU,OAAf,UACE,qDACA,4D,YCrBS,SAASE,EAAT,GAAgE,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,gBACzD,OACE,sBAAKL,UAAU,UAAf,UACE,6BAAKG,IACL,2CAAcC,EAAd,sBACA,2CAAcC,EAAd,2BCDN,IAAMC,E,MAAUC,GAAmB,CACjCC,WAAY,uBAGC,SAASC,IAAS,IAAD,EACUzB,mBAAS,IADnB,mBACvB0B,EADuB,KACTC,EADS,KAY9B,OAVAxB,qBAAU,WACRmB,EACGM,gCAEC,CAAEC,SAAU,UAAWC,UAAW,YAClC,KAEDzB,MAAK,SAACqB,GAAD,OAAkBC,EAAgBD,QACzC,IAEIA,EAAaK,OAClB,sBAAKf,UAAU,QAAf,UACE,uCACCU,EAAaM,KAAI,SAACC,GACjB,OACE,cAACf,EAAD,CAEEC,QAASc,EAAYC,KACrBd,eAAgBa,EAAYb,eAC5BC,gBAAiBY,EAAYZ,iBAHxBY,EAAYE,UASzB,sBAAKnB,UAAU,QAAf,UACE,uCACA,2DCxBSoB,MAVf,WACE,OACE,qCACE,6CACA,cAACrC,EAAD,IACA,cAAC0B,EAAD,QCISY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fc02fe5e.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function DadJokes() {\n  const [joke, setJoke] = useState(false);\n\n  useEffect(() => {\n    fetch(\"https://www.reddit.com/r/dadjokes/top.json?t=day&limit=1\")\n      .then((response) => response.json())\n      .then((result) => setJoke(result.data.children[0].data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  return joke.title ? (\n    <div className=\"joke\">\n      <h2>Dad Joke of the day</h2>\n      <h3>{joke.title}</h3>\n      <p>{joke.selftext}</p>\n    </div>\n  ) : (\n    <div className=\"joke\">\n      <h2>Dad Joke of the day</h2>\n      <h3>Sorry, no joke today :(</h3>\n    </div>\n  );\n}\n","export default function Station({ station, bikesAvailable, spacesAvailable }) {\n  return (\n    <div className=\"station\">\n      <h3>{station}</h3>\n      <p>There are {bikesAvailable} bikes available</p>\n      <p>There are {spacesAvailable} spaces available </p>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport createEnturService from \"@entur/sdk\";\nimport Station from \"./Station\";\n\nconst service = createEnturService({\n  clientName: \"therese-infoscreen\",\n});\n\nexport default function Bikes() {\n  const [bikeStations, setBikeStations] = useState([]);\n  useEffect(() => {\n    service\n      .getBikeRentalStationsByPosition(\n        //   oslo sentral station\n        { latitude: 59.911096, longitude: 10.7502687 },\n        100\n      )\n      .then((bikeStations) => setBikeStations(bikeStations));\n  }, []);\n\n  return bikeStations.length ? (\n    <div className=\"bikes\">\n      <h2>Bikes</h2>\n      {bikeStations.map((bikeStation) => {\n        return (\n          <Station\n            key={bikeStation.id}\n            station={bikeStation.name}\n            bikesAvailable={bikeStation.bikesAvailable}\n            spacesAvailable={bikeStation.spacesAvailable}\n          />\n        );\n      })}\n    </div>\n  ) : (\n    <div className=\"bikes\">\n      <h2>Bikes</h2>\n      <h3>Sorry, no bikes nearby</h3>\n    </div>\n  );\n}\n","import DadJokes from \"./DadJokes\";\nimport Bikes from \"./Bikes\";\n\nfunction App() {\n  return (\n    <>\n      <h1>Info screen</h1>\n      <DadJokes />\n      <Bikes />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}